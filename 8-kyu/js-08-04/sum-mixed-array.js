// ❔❔❔DESCRIPTION❔❔❔
/*Учитывая массив целых чисел в виде строк и чисел, верните сумму значений массива, как если бы все они были числами. Верните свой ответ в виде числа.*/

// 📝📝📝TEST📝📝📝
/*assert.strictEqual(sumMix([9, 3, '7', '3']), 22);
assert.strictEqual(sumMix(['5', '0', 9, 3, 2, 1, '9', 6, 7]), 42);
assert.strictEqual(sumMix(['3', 6, 6, 0, '5', 8, 5, '6', 2,'0']), 41);*/

// ✅✅✅SOLUTION✅✅✅
/*function sumMix(x) {
	let sum = 0
	for (let i = 0; i < x.length; i++) {
		sum += +x[i]
	}
	return sum
}*/

function sumMix(x){
	return x.map(a => +a).reduce((a, b) => a + b);
}
console.log(sumMix(['3', 6, 6, 0, '5', 8, 5, '6', 2,'0']))
/*1)	Метод map() в JavaScript — это высокоуровневая функция, которая создаёт новый массив,
применяя указанную функцию к каждому элементу исходного массива. Исходный массив при этом не изменяется.*/

/*2)	a => +a: Эта стрелочная функция передаётся в метод map().
Она принимает один параметр a и возвращает его числовое представление, используя унарный оператор плюс.*/

/*3)	Метод reduce()возвращает окончательное единственное значение, представляющее собой общую сумму.*/

/*4)	(a, b) => a + b: Эта стрелочная функция передаётся в метод reduce().
Она принимает два параметра (a — аккумулятор, b — текущий элемент) и возвращает их сумму.*/

/*Синтаксис: (параметры) => выражение.*/
/*const hello = (name) => "Привет, " + name;*/
/*Развернутый вариант
function hello(name) {
	return "Привет, " + name;
}*/





